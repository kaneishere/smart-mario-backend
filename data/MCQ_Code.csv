ID,Question,1,2,3,4,Answer,Explanation
1,Which syntax for class definition is wrong?,class student{ };,student class{ };,class student{ public: student(int a){ } };,class student{ student(int a){} };,2,Keyword class should come first. Class name should come after keyword class. Parameterized constructor definition depends on programmer so it can be left empty also.
2,Which of the following is incorrect?,class student{ }s;,class student{ }; student s;,class student{ }s[];,class student{ }; student s[5];,3,"The array must be specified with a size. You can’t declare object array, or any other linear array without specifying its size. It’s a mandatory field."
3,Which among the following is wrong?,class student{ }; student s;,abstract class student{ }; student s;,abstract class student{ }s[50000000];,abstract class student{ }; class toppers: public student{ }; topper t;,2,"We can never create instance of an abstract class. Abstract classes doesn’t have constructors and hence when an instance is created there is no facility to initialize its members. Option d is correct because topper class is inheriting the base abstract class student, and hence topper class object can be created easily."
4,Which among the following is correct?,"class student{ }s1,s2; s1.student()=s2.student();",class student{ }s1; class topper{ }t1; s1=t1;,"class student{ }s1,s2; s1=s2;",class student{ }s1; class topper{ }t1; s1.student()=s2.topper();,3,Only if the objects are of same class then their data can be copied from to another using assignment operator. This actually comes under operator overloading. Class constructors can’t be assigned any explicit value as in option class student{ }s1; class topper{ }t1; s1=t1; and class student{ }s1; class topper{ }t1; s1.student()=s2.topper();.
5,Which among the following is correct?,class student{ public: int student(){} };,class student{ public: void student (){} };,class student{ public: student{}{} };,class student{ public: student(){} };,4,"The constructors must not have any return type. Also, the body may or may not contain any body. Defining default constructor is optional, if you are not using any other constructor."
6,Which among the following function can be used to call default constructor implicitly in java?,this(),that(),super(),sub(),1,The function this() can be used to call the default constructor from inside any other constructor. This helps to further reuse the code and not to write the redundant data in all the constructors.
7,Which is correct syntax?,classname objectname= new() integer;,classname objectname= new classname;,classname objectname= new classname();,classname objectname= new() classname();,3,The syntax for object creating in java with calling a constructor for is it is as in option c. The syntax must contain the classname followed by the object name. The keyword new must be used and then the constructor call with or without the parameters as required.
8,Which among the following is correct to call a private member from outside the class?,object.memberfunction( parameters );,object->memberfunction( parameters );,object->memberfunction( parameteres); or object.memberfunction( parameters );,Not possible,4,"The private member function will not be accessible from outside the class. Hence any syntax will not work to access the private members. If you have the address of the member, may be you can access those members, but that is a totally different case and concept."
9,Choose the correct option for the following code:     class A{ static int c=0; public: A(){ c++; } };,Constructor will make c=1 for each object created,Constructor will make c=0 for each object created,Constructor will keep number of objects created,Constructor will just initialize c=0 then increment by 1,3,The constructor is using a static member to keep the count of the number of objects created. This is done because the variable c is static and hence the value will be common for all the objects created.
10,Which among the following is not allowed for data member declaration?,int a;,static int a;,abstract a;,Boolean a;,3,"The abstract keyword in the declaration of data members is not allowed. This is because the abstract keyword features can’t be used with the data members of the class. We can have all other syntax given, but not abstract."
11,How to refer to method of nested class?,enclosingClassObject.innerClassObject.method();,innerClassObject.method();,method();,depends on where the method is being called,4,"This depends on where the method is being called. If the method is called inside the enclosing class itself. Then we can’t use object of enclosing class. If the method is being called within the inner class itself, then its object will also be of no use."
12,Which of the following function can be used for dynamic memory allocation of objects?,malloc(),calloc(),create(),malloc() and calloc(),4,The malloc() function can be used to allocate dynamic memory for objects. Function calloc() can also be use. These functions differ in the way they allocate memory for objects.
13,If an array of objects is of size 10 and a data value have to be retrieved from 5th object then ________________ syntax should be used.,Array_Name[4].data_variable_name;,Data_Type Array_Name[4].data_variable_name;,Array_Name[4].data_variable_name.value;,Array_Name[4].data_variable_name(value);,1,"The array name with the index of fifth element is called, i.e. index 4. Then the dot operator is used to access the data member of that object. This Allows us to access the data members of all the objects in an object array."
14,Which object can be used to access the standard input?,System.inner,cin,System.stdin,console.input,2,Object cin can be used to take input from the standard input. It is used in C++. In java we can use System.in for the standard input stream. The syntax changes from language to language.
15,Can abstract class have main() function defined inside it?,"Yes, depending on return type of main()","Yes, always","No, main must not be defined inside abstract class","No, because main() is not abstract function",2,This is a property of abstract class. It can define main() function inside it. There is no restriction on its definition and implementation.
16,Which among the following is the proper syntax for the template class?,"template <typename T1, typename T2>;","Template <typename T1, typename T2>;","template <typename T> T named(T x, T y){ }","Template <typename T1, typename T2> T1 named(T1 x, T2 y){ }",3,"The syntax must start with keyword template, case sensitive. Then it should include the typename and a variable to denote it. Then whenever that variable is used, it replaces it with the data type needed."
17,Which among the following is correct for multiple inheritance?,"class student{public: int marks;}s; class stream{int total;}; class topper:public student, public stream{ };",class student{int marks;}; class stream{ }; class topper: public student{ };,class student{int marks;}; class stream:public student{ };,class student{ }; class stream{ }; class topper{ };,1,"Class topper is getting derived from 2 other classes and hence it is multiple inheritance. Topper inherits class stream and class student publicly and hence can use its features. If only few classes are defined, there we are not even using inheritance (as in option class student{ }; class stream{ }; class topper{ };)."
18,Which is the correct syntax of inheritance?,class derived_classname : base_classname{ /*define class body*/ };,class base_classname : derived_classname{ /*define class body*/ };,class derived_classname : access base_classname{ /*define class body*/ };,class base_classname :access derived_classname{ /*define class body*/ };,3,"Firstly, keyword class should come, followed by the derived class name. Colon is must followed by access in which base class has to be derived, followed by the base class name. And finally the body of class. Semicolon after the body is also must."
19,Which is the correct syntax for declaring static data member?,static mamberName dataType;,dataType static memberName;,memberName static dataType;,static dataType memberName;,4,The syntax must firstly be mentioned with the keyword static. Then the data type of the member followed by the member name should be given. This is general form of declaring static data members.
20,Which among the following is the correct syntax to access static data member without using member function?,className -> staticDataMember;,className :: staticDataMember;,className : staticDataMember;,className . staticDataMember;,2,"For accessing the static data members without using the static member functions, the class name can be used. The class name followed by scope resolution, indicating that static data members is member of this class, and then the data member name."
21,Which among the following is wrong syntax related to static data members?,className :: staticDataMember;,dataType className :: memberName =value;,static dataType memberName;,className : dataType -> memberName;,4,The syntax given in option 4 doesn’t belong to any particular declaration or definition. First one is to access the static members using the class name. Second is to define the static data outside the class. Third syntax id to declare a data member as static in a class.
22,Which is correct syntax to access the static member functions with class name?,className . functionName;,className -> functionName;,className : functionName;,className :: functionName;,4,The scope resolution operator must be used to access the static member functions with class name. This indicates that the function belongs to the corresponding class.
23,Which among the following is not a method of Throwable class?,public String getMessage(),public Throwable getCause(),public Char toString(),public void printStackTrace(),3,Actually all the functions are available in throwable class. But the return type given in the option is wrong. The function toString returns string value. Hence the return type must be a String and not a char.
24,Which is the correct syntax to call a member function using pointer?,pointer->function(),pointer.function(),pointer::function(),pointer:function(),1,The pointer should be mentioned followed by the arrow operator. Arrow operator is applicable only with the pointers. Then the function name should be mentioned that is to be called.
25,How can the address stored in the pointer be retrieved?,Using * symbol,Using $ symbol,Using & symbol,Using @ symbol,3,The & symbol must be used. This should be done such that the object should be preceded by & symbol and then the address should be stored in another variable. This is done to get the address where the object is stored.
26,"Which is the correct interpretation of the member function call from an object, object.function(parameter);","object.function(&this, parameter)","object(&function,parameter)","function(&object,&parameter)","function(&object,parameter)",4,The function name is specified first and then the parameter lists. The parameter list is included with the object name along with & symbol. This denotes that the address of the object is being passed as an argument.
27,Which syntax doesn’t execute/is false when executed?,if(&object != this),if(&function !=object),this.if(!this),this.function(!this),1,The condition becomes false when executed and hence doesn’t executes. This is the case where this pointer can guard itself from the self-reference. Here if the address of the object doesn’t match with this pointer that means the object doesn’t refer itself.
28,Which is the correct syntax for declaring the type of this in a member function?,classType [cv-qualifier-list] *const this;,classType const[cv-qualifier-list] *this;,[cv-qualifier-list]*const classType this;,[cv-qualifier-list] classType *const this;,4,The syntax contains the cv-qualifier-list that can be determined from the member function declaratory that can be either const or volatile or can be made both. Hence we write it as list. classType denotes the name of class to mention to which class does the object belong to. And *const this denotes that the this pointer is having a constant value.
29,Which among the following function can be called without arguments?,"void add(int x, int y=0)",void add(int=0),"void add(int x=0, int y=0)",void add(char c),3,"For the function to be called without arguments, either it must have zero arguments or it must have all the default arguments. Here the function in option void add(int x=0, int y=0) have all the default arguments and hence can be called directly with zero argument."
30,Which among the following is correct?,"void test(int x=0, int y, int z=0)","void test(int x=0, int=0)","void test(int x, int y=0)","void test(int x=’c, int y)",3,"The default arguments must be mentioned at last in the argument list. Also, the type of values assigned must match with the argument type. All the default arguments must be mentioned at last, none of the normal arguments should come in between the default arguments list."
31,"What function will be called with the independent syntax “test(5,6,7);”?","void test(int x, int y)","void test(int x=0, int y, int z)","int test(int x=0, y=0, z=0)","void test(int x, int y, int z=0)",4,There are three arguments that are getting passed to the function test(). Only the last option have all the default argument at last in the argument list. And the total number of the arguments is three. The third option is wrong because the return type is int and the syntax given is independent which means it doesn’t return any value.
32,"Which among the following is a wrong call to the function void test(int x, int y=0, int z=0)?","test(5,6,7);",test();,test(5);,"test(5,6);",2,The function must be passed with at least one argument. There is two default arguments and one normal argument which must be passed with some value. Hence the third call to the function is wrong as it doesn’t pass even a single parameter to the function
33,Which among the following can be used in place of default constructor?,"constructorName(int x, int y=0)","constructorName(int x=0, int y=0)","constructorName(int x=0, int y)","constructorName(int x, int y)",2,"For a parameterized constructor to be used as a default constructor, it must have all the default arguments. This makes the constructor to have optional arguments which are not mandatory to be passed."
34,Which is the correct syntax for using default arguments with the constructor?,default constructorName(default int x=0),constructorName(default int x=0),constructorName(int x=0),constructorName(),3,The constructors using the default arguments must initialize the arguments in the argument list. This is to make the constructor use the default value when no arguments are passed. If no arguments are listed then it is a default constructor.
35,"How many parameters must be passed if only the following prototype is given to a constructor?      Prototype: className(int x, int y, int z=0);",1,2,3,Compile time error,2,"In the prototype given, only 2 arguments are mandatory. Since the third argument is default argument, so it is not mandatory to pass the argument."
36,"Which constructor among the following will be called if a call is made like className(5,’a’);?","className(int x=5,char c=’a’);","int className(int x, char c, char d);","className(int x, char c, int y);","char className(char c,int x);",1,The syntax given is passing two parameters to the constructor call. One value is of integer type and another of character type. Hence the constructor with arguments of int and char type should be called. There is only one option that first accepts integer value and then a character value. Hence that constructor will be called.
37,Which constructor definition will produce a compile time error?,className(int x=0);,className(char c);,"className(int x=0,char c);","className(char c,int x=0);",3,"The default arguments, just like with member functions, must be listed at last in the argument list. Hence this will produce a compile time error. The compiler doesn’t allow the definition to be executed."
38,If two classes are defined “Parent” and “Child” then which is the correct type upcast syntax in C++?,Parent *p=child;,Parent *p=*child;,Parent *p=&child;,Parent *p=Child();,3,The syntax must contain the base class name first. So that the parent class object pointer can be declared. Then the object is assigned with the derived class object with & symbol. & symbol is added to get the address of the derived class object.
39,Which among the following is correct syntax to declare a 2D array using new operator?,char (*pchar)[10] = new char[][10];,char (pchar) = new char[][10];,char (*char) = new char[10][];,char (*char)[][10]= new char;,1,The new operator usage to declare a 2D array requires a pointer and size of array to be declared. Data type and then the pointer with size of array. The left index can be left blank or any variable can be assigned to it.
40,How does compiler convert “::operator new” implicitly?,::operator new( sizeof( ) ),::operator new( sizeof( type ) ),new operator :: type sizeof( type ),new sizeof( type ) operator,2,The compiler implicitly converts the syntax so that the instruction can be understood by the processor and proper machine code can be generated. The conversion is done implicitly and no explicit syntax is required.
41,Function equals() is _______________ and equalIgnoreCase() is _________________,"Case Insensitive, case insensitive","Case sensitive, Case insensitive","Case sensitive, case sensitive","Case insensitive, case sensitive",2,Both the functions return Boolean value. The function equal() is case sensitive and returns false even if a single character is case different in two strings. The other function ignores the case sensitivity and only checks if the spellings are same.
42,Function replace() accepts _____________ arguments.,1,2,3,4,2,"The first argument is the target character. This target character will be replaced by another character. The new character is the second argument to the function. Only the characters can be passed as argument, not a string."
43,If two arguments are passed to the indexOf() function then ___________________,Second argument indicates the occurrence number of specified character from starting,Second argument indicates the occurrence number of specified character from end,Second argument indicates the index of the character in first argument,Second argument indicates the index of the character from the last of the string,1,"The string may have more than one occurrence of a character. We use this function to get the index at which the specified number of times a specific character has occurred in a string. For example, we can get the index of 5th occurrence of character “j” in a string."
44,Which attribute can be used to get the size of an array?,Size.Array,Array.Size,Array_name.length,length.Array_name,3,The array name is given of which the length have to be calculated. The array length is stored in the attribute length. Hence we access it using dot operator.
45,Which class contain runFinalization() method?,Finalize,System,Final,SystemFinal,2,The runFinalization() Function is defined in the System class. The function is used to finalize an object which undergo destruction. The action is required to terminate the object properly.
46,"What does load(String)::= function do, in System class?",Loads dynamic library for a path name,Loads all the dynamic libraries,Loads all the Number in string format,Loads the processor with calculations,1,Only the specified path named dynamic libraries are loaded. All the dynamic libraries can’t be loaded at a time. Hence we use this function for specific libraries.
