ID,Question,1,2,3,4,Answer,Explanation
1,Which was the first purely object oriented programming language developed?,Java,C++,SmallTalk,Kotlin,3,SmallTalk was the first programming language developed which was purely object oriented. It was developed by Alan Kay. OOP concept came into the picture in 1970’s.
2,Which of the following best defines a class?,Parent of an object,Instance of an object,Blueprint of an object,Scope of an object,3,A class is Blueprint of an object which describes/ shows all the functions and data that are provided by an object of a specific class. It can’t be called as parent or instance of an object. Class in general describes all the properties of an object.
3,Which Feature of OOP illustrated the code reusability?,Polymorphism,Abstraction,Encapsulation,Inheritance,4,"Using inheritance we can reuse the code already written and also can avoid creation of many new functions or variables, as that can be done one time and be reused, using classes."
4,How many classes can be defined in a single program?,Only 1,Only 100,Only 999,As many as you want,4,"Any number of classes can be defined inside a program, provided that their names are different. In java, if public class is present then it must have the same name as that of file."
5,Which of the two features match each other?,Inheritance and Encapsulation,Encapsulation and Polymorphism,Encapsulation and Abstraction,Abstraction and Polymorphism,3,Encapsulation and Abstraction are similar features. Encapsulation is actually binding all the properties in a single class or we can say hiding all the features of object inside a class. And Abstraction is hiding unwanted data (for user) and showing only the data required by the user of program.
6,Which feature of OOP indicates code reusability?,Encapsulation,Inheritance,Abstraction,Polymorphism,2,Inheritance indicates the code reusability. Encapsulation and abstraction are meant to hide/group data into one element. Polymorphism is to indicate different tasks performed by a single entity.
7,Does OOP provide better security than POP?,Always true for any programming language,May not be true with respect to all programming languages,It depends on type of program,It’s vice-versa is true,1,"It is always true as we have the facility of private and protected access specifiers. Also, only the public and global data are available globally or else the program should have proper permission to access the private data."
8,Which among the following can be viewed as combination of abstraction of data and code.,Class,Object,Inheritance,Interfaces,2,Object can be viewed as abstraction of data and code. It uses data members and their functioning as data abstraction. Code abstraction as use of object of inbuilt class.
9,Using higher degree of abstraction __________,May get unsafe,May reduce readability,Can be safer,Can increase vulnerability,3,"It will make the code safer. One may think it reduces the readability, but the fact is, it actually helps us understand the code better. We don’t have to read the complex code which is of no use in understanding the program."
10,What is the scope of a class nested inside another class?,Protected scope,Private scope,Global scope,Depends on access specifier and inheritance used,4,"It depends on the access specifier and the type of inheritance used with the class, because if the class is inherited then the nested class can be used by subclass too, provided it’s not of private type."
11,How members of an object are accessed?,Using dot operator/period symbol,Using scope resolution operator,Using member names directly,Using pointer only,1,Using dot operator after the name of object we can access its members. It is not necessary to use the pointers. We can’t use the names directly because it may be used outside the class.
12,Which among the following is not true for polymorphism?,It is feature of OOP,Increases overhead of function definition always,Helps in redefining the same functionality,Ease in readability of program,2,"It never increases function definition overhead, one way or another if you don’t use polymorphism, you will use the definition in some other way, so it actually helps to write efficient codes."
13,Which among the following doesn’t come under OOP concept?,Platform independent,Data binding,Message passing,Data hiding,1,Platform independence is not feature of OOP. C++ supports OOP but it’s not a platform independent language. Platform independence depends on programming language.
14,"Which among the following is called first, automatically, whenever an object is created?",Class,Constructor,New,Trigger,2,Constructors are the member functions which are called automatically whenever an object is created. It is a mandatory functions to be called for an object to be created as this helps in initializing the object to a legal initial value for the class.
15,Which among the following is not a necessary condition for constructors?,Its name must be same as that of class,It must not have any return type,It must contain a definition body,It can contains arguments,3,"Constructors are predefined implicitly, even if the programmer doesn’t define any of them. Even if the programmer declares a constructor, it’s not necessary that it must contain some definition."
16,"In which access should a constructor be defined, so that object of the class can be created in any function?",Public,Protected,Private,Any access specifier will work,1,"Constructor function should be available to all the parts of program where the object is to be created. Hence it is advised to define it in public access, so that any other function is able to create objects."
17,"If class C inherits class B. And B has inherited class A. Then while creating the object of class C, what will be the sequence of constructors getting called?","Constructor of C then B, finally of A","Constructor of A then C, finally of B","Constructor of C then A, finally B","Constructor of A then B, finally C",4,"While creating the object of class C, its constructor would be called by default. But, if the class is inheriting some other class, firstly the parent class constructor will be called so that all the data is initialized that is being inherited."
18,Can constructors be overloaded in derived class?,"Yes, always","Yes, if derived class has no constructor","No, programmer can’t do it","No, never",4,"The constructor must be having the same name as that of a class. Hence a constructor of one class can’t even be defined in another class. Since the constructors can’t be defined in derived class, it can’t be overloaded too, in derived class."
19,When a destructor is called?,After the end of object life,Anytime in between object’s lifespan,At end of whole program,Just before the end of object life,4,"The destructor is called just before the object go out of scope or just before its life ends. This is done to ensure that all the resources reserved for the object are used and at last, are made free for others."
20,Which among the following best describes the protected specifier?,Members are most secure and can’t be used outside class,Members are secure but can be used outside the class,"Members are secure as private, but can be inherited","Members are secure like private, but can’t be inherited",3,"The members which are made protected, are most secure if inheritance is not used. But, this facility is provided to keep those members private and with that, they can be inherited by other classes. This is done to make the code more flexible."
21,"If members of a super class are public, then________",All those will be available in subclasses,None of those will be available in subclasses,Only data members will be available in subclass,Only member functions will be available in subclass,1,All the members will be available in subclasses. Though it is not guaranteed whether the members will be available in subsequent subclasses from the first subclass.
22,What happens if non static members are used in static member function?,Compile time error,Runtime error,Executes fine,Executes if that member function is not used,1,"There must be specific memory space allocated for the data members before the static member functions uses them. But the space is not reserved if object is not declared. Hence only if static members are not used, it leads to compile time error."
23,Which among the following is not possible for member function?,Access protected members of parent class,Definition without return type,Access public members of subclass,Access static members of class,3,A member function of a class can only have the access to the members of its own class and parent classes if inheritance used. Otherwise a member function can never access the members of a subclass. Accessing static members of a class is possible by normal and static member functions.
24,Which type of data can a local class access from the function in which it is defined?,Static and extern,Abstract and static,Void and extern,Const and static,1,The local classes have this feature to access the static and extern variables of the function in which those are defined. This feature is available since these type of data are common to the program and is created only one time. Run time creation and destruction of these variables is not done. The only restriction that may apply is those members must be constants.
25,Can static variables be declared inside a local class?,"Yes, with public access specifier","Yes, anywhere as required","No, not possible in private access specifier","No, not possible anyway",4,"No, the static variables can’t be declared inside a local class. This is because each time the function is called, all the variables get created again and are destroyed as soon as the function is returned. This would have been possible id the static variable was of function."
26,All the member functions of local classes are __________ by default.,Static,Inline,Abstract,Virtual,3,"All the members are defined inside the class body. And when the member functions are defined inside the class body, they are made inline by default. If the definition is too complex, those are made normal functions."
27,All the data members of local class must be ___________,Defined with declaration,Defined in constructor,Declared and defined in constructor,Declared using a member function,2,The data members follow the same rules as of simple classes. Hence the data members must be declared first. Then their definition must be given using the constructors.
28,How many objects can be returned at once?,Only 1,Only 2,Only 16,As many as required,1,"Like any other value, only one object can be returned at ones. The only possible way to return more than one object is to return address of an object array. But that again comes under returning object pointer."
29,How many objects can be passed to a function simultaneously?,Only 1,Only an array,Only 1 or an array,As many as required,4,There is no limit to how many objects can be passed. This works in same way as that any other variable gets passed. Array and object can be passed at same time also.
30,"If an object is passed by address, will be constructor be called?","Yes, to allocate the memory","Yes, to initialize the members","No, values are copied","No, temporary object is created",3,"A copy of all the values is created. If the constructor is called, there will be a compile time error or memory shortage. This happens because each time a constructor is called, it try to call itself again and that goes infinite times."
31,What is reference to an object?,It is address of an object,It is address of where the variables and methods of object are stored,It is pointer having address of an object,It is address of only variables and not the methods of an object,2,Reference indicates the address where the object’s variables and methods are stored. It is not actual address of the object. This is done to directly use the variables and methods whenever required.
32,If a reference variable is declared final then _________________,It can never be reassigned to refer to a different object,It can be assigned to refer to any object anytime,It can never be assigned with any object,It can be assigned with 2 or more objects simultaneously,1,"Since the variable is declared final. It will have a constant value throughout the program. It can refer to only one object at a time. And if it was made to refer to none of the object, it would have got no use."
33,Which among the following is true?,Object referencing refers to methods address,Object referencing refers to variable of object,"Object referencing points to same address, if assigned by variables",Object referencing is used to point methods,3,The object referencing will point to the same address if variables are assigned. All the variables might have a different name but they will point to the same memory location. This is most basic concept of references.
34,When is the memory allocated for an object?,At declaration of object,At compile time,When object constructor is called,When object is initialized to another object,3,"The object memory allocation takes place when the object constructor is called. Declaration of an object doesn’t mean that memory is allocated for its members. If object is initialized with another object, it may just get a reference to the previously created object."
35,Which among the following is a mandatory condition for array of objects?,All the objects should be of different class,All the objects should be of same program classes,All the objects should be of same class,All the objects should have different data,3,The objects of an array must be of same class. This is mandatory because array is set of same type of elements. The objects of same class are considered to be of same type.
36,How the objects of array can be denoted?,Indices,Name,Random numbers,Alphabets,1,Different objects in an array can be denoted with the indices of array. The first object is denoted by 0. And the further indices denote the next objects in sequence of array.
37,Is an array of characters always a string?,"Yes, always","Yes, if each character is terminated by null","No, since each character is terminated by null","No, never",4,The character arrays are not the same as string. The string once created then remains the same. The character array values may change.
38,Which among the following is the main use of object?,To create instance of a function,To create instance of a program,To create instance of class,To create instance of structures,3,"The objects are used to create an instance of a class. Objects can represent a class in an independent form. The basic blueprint, that contains the information of the type of data that can be stored in an object, is given by the class."
39,Which among the following is not a property of an object?,Identity,Properties,Attributes,Names,4,The names are not property of an object. The identity can be in any form like address or name of object but name can’t be termed as only identity of an object. The objects contain attributes that define what type of data an object can store.
40,Immutable object are used ______________________,To set up as a fixed state,To set up variable object,To set up an object of abstract class,To set up an object of derived class,1,An immutable object can be created for an object which has to be fixed with values. The object data will not be changed throughout the program. This can be useful to eliminate the unintentional changes in the data of object.
41,Which object can be used to contain other objects?,First class object,Derived class object,Container object,Enclosure object,3,A container object can be used to contain other objects. Container object is an ADT. Its object are collection of other objects. Some specific rules apply to these types of objects.
42,A factory object is used ______________________,To create new classes,To create new function,To create new data members,To create new objects,4,"The factory object is an object that can be used to create other objects. If it is seen formally, it behaves like a method that will return object on its use. The object returned is assumed to be a new object."
43,What are singleton objects?,The only two objects of a class throughout the program,The only object of a class throughout the program,The objects that are alive throughout the program,The objects that are created and then deleted without use,2,If a class has only one object created and that is the only object of the class. Then the object is known as the singleton object. But only if that object is the only object of the class and no other object is created for that class.
44,Objects type ____________________,Can be changed in runtime,Can’t be changed in runtime,Can be changed in compile time,May or may not get changed,2,The object types are always fixed. Once the object is created of a specific type then it can’t be changed. Neither at runtime nor at compile time.
45,An object can be used to represent _________________,A real world entity,A real function,Some real data only,Some function only,1,The objects are actually meant to represent an entity. The classes are real world object’s blueprint. The classes then are used to create an entity representation.
46,"If there is an abstract method in a class then, ________________",Class must be abstract class,Class may or may not be abstract class,Class is generic,Class must be public,1,"It is a rule that if a class have even one abstract method, it must be an abstract class. If this rule was not made, the abstract methods would have got skipped to get defined in some places which are undesirable with the idea of abstract class."
47,Abstract classes can ____________________ instances.,Never have,Always have,Have array of,Have pointer of,1,"When an abstract class is defined, it won’t be having the implementation of at least one function. This will restrict the class to have any constructor. When the class doesn’t have constructor, there won’t be any instance of that class."
48,We ___________________ to an abstract class.,Can create pointers,Can create references,Can create pointers or references,"Can’t create any reference, pointer or instance",3,Even though there can’t be any instance of abstract class. We can always create pointer or reference to abstract class. The member functions which have some implementation inside abstract itself can be used with these references.
49,Use of pointers or reference to an abstract class gives rise to which among the following feature?,Static Polymorphism,Runtime polymorphism,Compile time Polymorphism,Polymorphism within methods,2,The runtime polymorphism is supported by reference and pointer to an abstract class. This relies upon base class pointer and reference to select the proper virtual function.
50,Is it necessary that all the abstract methods must be defined from an abstract class?,"Yes, depending on code","Yes, always","No, never","No, if function is not used, no definition is required",2,"That is the rule of programming language that each function declared, must have some definition. There can’t be some abstract method that remains undefined. Even if it’s there, it would result in compile time error."
51,The _____________ class is a specialization of a more general template class.,String,Integer,Digit,Math,1,The string class is more specialized. Since the string must be able to store any kind of data that is given to the string. Hence it needs maximum specialization.
52,A base class is also known as _____________ class.,Basic,Inherited,Super,Sub,3,"A class which is being derived by other classes, is called as super class. This concept is clearly used in java as we call the functions of a base class by using the keyword super as required."
53,An abstract class is always a __________ class.,Derived,Base,Template,Nested,2,"Every abstract class is a base class. It must be so, because the functions which are not defined inside the abstract class, must be defined in the derived classes. Hence it becomes a base class."
54,How to make a derived class a base class?,Change name of the class,Use keyword base,Make a class derive from it,Can’t be done,3,"Making another class derive from it will make that class as base class. It is not necessary that we have to write different code for it. If at least one class derives that class, it becomes the base class for the new class."
55,"If a base class is being derived by two other classes, which inheritance will that be called?",Single,Multiple,Multi-level,Hierarchical,4,"When more than one classes are being derived from a single parent class, the inheritance is known as hierarchical inheritance. This is usually useful when the base class is higher abstraction of its derived classes."
56,Base class have _________ degree of abstraction.,Higher,Lower,Intermediate,Minimum,2,"A base class will have lesser information as compared to those of derived classes. Since derived classes inherit the base class properties and then add on their own features, they elaborate more hence have lower degree of abstraction."
57,Can we call methods of base class using the constructor of the derived class?,"Yes, always","Yes, but not always","No, never","No, but we can call in some cases",1,"If the function is defined in the base class, it can always be called from the constructor of its derived class. Since the constructors are not private, they can be accessed in derived class even if those are protected."
58,"If a base class is inherited from another class and then one class derives it, which inheritance is shown?",Multiple,Single,Hierarchical,Multi-level,4,"If a base class is inherited from another class, single inheritance is shown. But when one more class inherits the derived class, this becomes a multi-level inheritance."
59,Which among the following is inherited by a derived class from base class?,Data members only,Member functions only,All the members except private members,All the members of base class,3,"The class inheriting another class, inherits all the data members and member functions that are not private. This is done to ensure the security features with maximum flexibility."
60,Which among the following must be in a base class?,Data members,Member functions,Access specifiers,Nothing,4,Even a class that doesn’t have any members can be a base class. It is not mandatory to have any member or attribute in base class.
61,Which members can never be accessed in derived class from the base class?,Private,Protected,Public,All except private,4,There is no restriction for a derived class to access the members of the base class until and unless the members are private. Private member are declared so that those members are not accessible outside the class.
62,Derived class is also known as ______________ class.,Subclass,Small class,Big class,Noticeable class,1,It is just another name given to the derived classes. This is used while denoting all the derived classes subsequent to a superclass.
63,"If class A is derived from another derived class B which is derived from class C, which class will have maximum level of abstraction?",Class A,Class B,Class C,All have the same level of abstraction,3,The abstraction level of class C will be maximum. This is because the parent class have higher level of abstraction. Hence the parent of all other class will have maximum level of abstraction.
64,Which feature is not related to the derived classes among the following?,Inheritance,Encapsulation,Run time memory management,Compile time function references,3,The memory management is the feature that is not necessary for derived classes that will be a part of whole program. The functions references must be resolved for their proper use if inheritance is used.
65,Deriving a class in such a way that that the base class members are not available for further inheritance is known as ___________________,Public inheritance,Protected inheritance,Protected or private inheritance,Private inheritance,4,"The private members of a class can never be derived to another class. When a class derives another class using private inheritance, all the members become private members of the derived class. Hence these member won’t be available for further inheritance."
66,"To group all the brands of cars, what should be used?",Class,Structure,Function,Object,1,"A class can be used to group all the brands of cars. The Different brands may have different properties but all will have some common properties like number of wheels and doors, accessories etc. All of those properties can be grouped into a single class representing all the cars."
67,Which class represents the most abstracted information?,Nested,Derived,Enclosed,Base,4,The base classes are the most abstracted part of information. A base class having many other derived classes would have a bigger overview of all the other derived classes. Hence the base classes have the most abstract information.
68,Class is _____________ of an object.,Basic function definition,Blueprint,Detailed description with values,Set of constant values,2,The class is an overview for an object. It contains the basic details map of data that an object will contain. An object is independent representation of class.
69,Why do classes use mutator methods?,Allows client to modify the program,Allows client to modify/write the private members,Allows servers to access all the private data,Allows servers to access only protected members,2,The client can have rights to access a file and write something to it. This is mandatory to keep the private data updated. Also it is an advantage over the use of hidden class members.
70,Which among the following is the most abstract form of class?,Cars,BMW cars,Big cars,Small cars,1,"The most abstract class is class Cars. The class Cars is the most general form of all other cars. If it is a brand of car, it comes under car. If it is the type of car then also it comes under Cars."
71,Members which are not intended to be inherited are declared as ________________,Public members,Protected members,Private members,Private or Protected members,3,Private access specifier is the most secure access mode. It doesn’t allow members to be inherited. Even Private inheritance can only inherit protected and public members.
72,Which Class is having highest degree of abstraction in multilevel inheritance of 5 levels?,Class at 1st level,Class 2nd last level,Class at 5th level,All with same abstraction,1,"The class with highest degree of abstraction will be the class at the 1st level. You can look at a simple example like, a CAR is more abstract than SPORTS CAR class. The level of abstraction decrease with each level as more details comes out."
73,Can abstract classes be used in multilevel inheritance?,"Yes, always","Yes, only one abstract class","No, abstract class doesn’t have constructors","No, never",1,The abstract classes can always be used in multilevel inheritance. The only condition that may arise is that all the undefined functions must be defined in subclasses. There must not be any undefined function.
74,"In multilevel inheritance, which is the most significant feature of OOP used?",Code readability,Flexibility,Code reusability,Code efficiency,3,The classes using multilevel inheritance will use the code in all the subsequent subclasses if available. Hence the most significant feature among the options given is code reusability. This feature is generally intended to use the data values and reuse the redundant functions.
75,"Which problem arises due to multiple inheritance, if hierarchical inheritance is used previously for its base classes?",Circle,Diamond,Triangle,Loop,2,The diamond problem arises when multiple inheritance is used. This problem arises because the same name member functions get derived into a single class. Which in turn creates ambiguity in calling those methods.
76,Which members can’t be accessed in derived class in multiple inheritance?,Private members of base,Public members of base,Protected members of base,All the members of base,1,The private member’s are available for only the class containing those members. Derived classes will have access to protected and public members only.
77,Which class constructor is called first when an object of derived class is created?,Base class constructor,Derived class constructor,Firstly created derived class constructor,Last created derived class constructor,1,The base class must be initialised first hence the constructor of base class is called first. This makes everything ready for the new object being created.
78,Which amongst the following is true for hybrid inheritance?,Constructor calls are in reverse,Constructor calls are priority based,Constructor of only derived class is called,Constructor calls are usual,4,The constructors will be called in usual way. First the parent class Constructor and then the derived class Constructors. This is done to initialise all the members properly.
79,"If hybrid inheritance is used, it mostly shows _______________ feature of OOP.",Flexibility,Reusability,Efficiency,Code readability,2,"The code is reusable in most of the classes and the data becomes more linked to other classes. Other features are also exhibited, but the code reusability is used the most. Code readability becomes relatively less. Flexibility increases but it depends on how the hybrid inheritance is used."
80,Any changes made to static data member from one member function _____________,Is reflected to only the corresponding object,Is reflected to all the variables in a program,Is reflected to all the objects of that class,Is constant to that function only,3,"The changes made from any function to static data member will be a common change for all the other objects also. If the change is made with respect to one object and change is printed from another object, the result will be same."
81,Which among the following is true?,Static member functions can’t be virtual,Static member functions can be virtual,Static member functions can be declared virtual if it is pure virtual class,Static member functions can be used as virtual in Java,1,"The static member functions can’t be virtual. This is a restriction on static member functions, since the definition should not change or should not be overridden by any other function of derived class. The static members must remain same for all the objects."
82,The static data member _________________,Can be mutable,Can’t be mutable,Can’t be integer,Can’t be characters,2,The static data members can never be mutable. There copies are not made. Since those are common and created only once.
83,Which among the following is true for class exceptions?,Only base class can give rise to exceptions,Only derived class can give rise to exceptions,Either base class or derived class may produce exceptions,Both base class and derived class may produce exceptions,4,It’s not mandatory that either base class or derived class can give rise to exceptions. The exceptions might get produced from any class. The exceptions depends on code.
84,How many catch blocks can a class have?,Only 1,2,3,As many as required,4,There are many type of exceptions that may arise while running a code. And each catch block can handle only one exception. Hence there can be as many catch blocks as required.
85,An exception may arise when _______________,Input is fixed,Input is some constant value of program,Input given is invalid,Input is valid,3,The exceptions may arise because the input given by the user might not be of the same type that a program can manage. If the input is invalid the program gets terminated.
86,Which class is used to handle the input and output exceptions?,InputOutput,InputOutputExceptions,IOExceptions,ExceptionsIO,3,There is a specific class to handle each type of exceptions that might be produced in a program. The input and output exceptions can be handled by an object of class IOExcceptions. This class handles all type of input and output exceptions.
87,Why do we use finally block?,To execute the block if exception occurred,To execute a code when exception is not occurred,To execute a code whenever required,To execute a code with each and every run of program,4,"Sometimes there is a need to execute a set of code every time the program runs. Even if the exception occurs and even if it doesn’t, there can be some code that must be executed at end of the program. That code is written in finally block. This block is always executed regardless of exceptions occurring."
88,If an object is declared inside the function then ____________________ outside the function.,It can be returned by reference,It can’t be returned by reference,It can be returned by address,It can’t be returned at all,2,The object which is declared inside the class can never be returned by reference. This is because the object will be destroyed as it goes out of scope when the function is returned. The local variables get destroyed when function is returned hence the local objects can’t be returned by reference.
89,If an object is being returned by value then __________________________,Its member values are made constant,Its member values have to be copied individually,Its member values are not used,Its member values are copied using copy constructor,4,"When an object is returned by value, it will be returned to another object or will be directly used. Still in all the conditions the copy constructor will be used to copy all the values from the temporary object that gets created."
90,The new operator _____________,Can allocate reference types too,Doesn’t allocate reference types,Can allocate reference to objects,Doesn’t allocate any data,2,The new operator doesn’t allocate reference types. This is because the reference types are not objects. The new operator is used to allocate memory to the direct objects.
91,Initializers __________________,Are used for specifying arrays,Are used to defined multidimensional arrays,Can’t be specified for arrays,Can’t be specified for any data,3,The initializers can’t be specified for arrays. The initializers can create arrays of object if and only if the class has a default constructor. That is a zero argument constructor so that it can be called without any argument.
92,The static variables of a function ________________,Are also automatic variables,Are not automatic variables,Are made automatic by default,Can be made automatic explicitly,2,The static members can’t be automatic. This is because the automatic variables are created and destroyed with each call to a specific function. But the static members remain throughout the execution of program once created.
93,What values does uninitialized automatic variables contain?,Null value,Void value,Undefined/Garbage,Zero value,3,"The automatic variable which are not initialized, contain garbage value. If we just declare a variable and try to print its value, the result is some unknown value. The value is garbage as that was not expected value."
94,The delete operator __________________,Invokes function operator delete,Invokes function defined by user to delete,Invokes function defined in global scope to delete object,Doesn’t invoke any function,1,The delete operator invokes the function operator delete. This function in turn performs all the delete operations on the mentioned object. This is ensures safe deletion.
95,For objects that are not of class type ______________,Global delete operator is invoked,Local delete operator is invoked,Global user defined function is invoked,Local function to delete object is called,1,"The global delete operator is called to delete the objects that are not of class type. Class type includes class, union or struct. All objects of these types can be deleted using the global delete operator."
96,Which among the following is a mandatory condition for downcasting?,It must not be done explicitly,It must be done implicitly,It must be done explicitly,It can’t be done explicitly,3,The downcasting of any object must be done explicitly. This is because the compilers don’t support the implicit conversion of a supertype to subtype.
97,What should be used for safe downcast?,Static cast,Dynamic cast,Manual cast,Implicit cast,2,The dynamic cast can be done using the operator dynamic_cast. This converts one type to another type in a safe way.
98,"If dynamic_cast fails, which value is returned?",void,null,void pointer,null pointer,4,"The null pointer is returned by the dynamic_cast, if it fails. The conversion sometimes fails because of too complex type conversion. The conversion may also fail due to memory or some related issues."
99,What happens when downcasting is done but not explicitly defined in syntax?,Compile time error,Runtime error,Code write time error,Conversion error,1,"The implicit downcasting is not possible. If tried, the compiler produces an error. Since the compiler doesn’t allow coasting to a type that is not compatible."
100,What does function length do in String class?,Returns length of string including null character,Returns length of string excluding null character,Returns length of substring,Returns size of string in bytes,2,The length function returns the length of string. The length is the number of characters in the string but the last null character is not counted. The string length can be used to loop through each character in the string.